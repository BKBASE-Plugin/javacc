<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.javacc.examples</groupId>
		<artifactId>java</artifactId>
		<version>8.0.0</version>
	</parent>
	<name>JavaCC examples Java Interpreter</name>
	<groupId>org.javacc.examples.java</groupId>
	<artifactId>Interpreter</artifactId>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>javacc-maven-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.javacc</groupId>
						<artifactId>parser</artifactId>
						<version>${javacc.parser}</version>
					</dependency>
					<dependency>
						<groupId>org.javacc.codegen</groupId>
						<artifactId>java</artifactId>
						<version>${javacc.parser}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>jcc</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>jjtree-javacc</goal>
						</goals>
						<configuration>
							<codeGenerator>Java</codeGenerator>
							<nodeDirectory>src/main/java</nodeDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>fact</id>
						<phase>test</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>SPL</mainClass>
							<arguments>
								<argument>${project.basedir}/spl/fact.spl</argument>
								<argument>${project.basedir}/spl/fact.in</argument>
								<argument>${project.basedir}/spl/fact.out</argument>
								<argument>${project.basedir}/spl/fact.err</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>odd</id>
						<phase>test</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>SPL</mainClass>
							<arguments>
								<argument>${project.basedir}/spl/odd.spl</argument>
								<argument>${project.basedir}/spl/odd.in</argument>
								<argument>${project.basedir}/spl/odd.out</argument>
								<argument>${project.basedir}/spl/odd.err</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>sqrt</id>
						<phase>test</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>SPL</mainClass>
							<arguments>
								<argument>${project.basedir}/spl/sqrt.spl</argument>
								<argument>${project.basedir}/spl/sqrt.in</argument>
								<argument>${project.basedir}/spl/sqrt.out</argument>
								<argument>${project.basedir}/spl/sqrt.err</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>compare-fact</id>
						<phase>test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<available file="${project.basedir}/spl/fact.out" property="isActualAvailable" />
								<fail unless="isActualAvailable" message="${project.basedir}/spl/fact.out does not exist!" />
								<available file="${project.basedir}/spl/fact.ref" property="isExpectedAvailable" />
								<fail unless="isExpectedAvailable" message="${project.basedir}/spl/fact.ref does not exist!" />
								<condition property="files.match">
									<filesmatch file1="${project.basedir}/spl/fact.out" file2="${project.basedir}/spl/fact.ref" />
								</condition>
								<fail unless="files.match" message="${project.basedir}/spl/fact.out does not match ${project.basedir}/spl/fact.ref!" />
							</target>
						</configuration>
					</execution>
					<execution>
						<id>compare-odd</id>
						<phase>test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<available file="${project.basedir}/spl/odd.out" property="isActualAvailable" />
								<fail unless="isActualAvailable" message="${project.basedir}/spl/odd.out does not exist!" />
								<available file="${project.basedir}/spl/odd.ref" property="isExpectedAvailable" />
								<fail unless="isExpectedAvailable" message="${project.basedir}/spl/odd.ref does not exist!" />
								<condition property="files.match">
									<filesmatch file1="${project.basedir}/spl/odd.out" file2="${project.basedir}/spl/odd.ref" />
								</condition>
								<fail unless="files.match" message="${project.basedir}/spl/odd.out does not match ${project.basedir}/spl/odd.ref!" />
							</target>
						</configuration>
					</execution>
					<execution>
						<id>compare-sqrt</id>
						<phase>test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<available file="${project.basedir}/spl/sqrt.out" property="isActualAvailable" />
								<fail unless="isActualAvailable" message="${project.basedir}/spl/sqrt.out does not exist!" />
								<available file="${project.basedir}/spl/sqrt.ref" property="isExpectedAvailable" />
								<fail unless="isExpectedAvailable" message="${project.basedir}/spl/sqrt.ref does not exist!" />
								<condition property="files.match">
									<filesmatch file1="${project.basedir}/spl/sqrt.out" file2="${project.basedir}/spl/sqrt.ref" />
								</condition>
								<fail unless="files.match" message="${project.basedir}/spl/sqrt.out does not match ${project.basedir}/spl/sqrt.ref!" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
 		</plugins>
	</build>
</project>